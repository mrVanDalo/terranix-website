{"backend.etcd":{"declarations":[{"channelPath":"terranix/modules/terraform/backends.nix","path":"modules/terraform/backends.nix","url":"https://github.com/mrVanDalo/terranix/blob/master/modules/terraform/backends.nix#blob-path"}],"default":null,"description":"etcd backend\nhttps://www.terraform.io/docs/backends/types/etcd.html\n","loc":["backend","etcd"],"readOnly":false,"type":"null or submodule"},"backend.etcd.endpoints":{"declarations":[{"channelPath":"terranix/modules/terraform/backends.nix","path":"modules/terraform/backends.nix","url":"https://github.com/mrVanDalo/terranix/blob/master/modules/terraform/backends.nix#blob-path"}],"description":"A space-separated list of the etcd endpoints\n","loc":["backend","etcd","endpoints"],"readOnly":false,"type":"string"},"backend.etcd.password":{"declarations":[{"channelPath":"terranix/modules/terraform/backends.nix","path":"modules/terraform/backends.nix","url":"https://github.com/mrVanDalo/terranix/blob/master/modules/terraform/backends.nix#blob-path"}],"default":null,"description":"the password\n","loc":["backend","etcd","password"],"readOnly":false,"type":"null or string"},"backend.etcd.path":{"declarations":[{"channelPath":"terranix/modules/terraform/backends.nix","path":"modules/terraform/backends.nix","url":"https://github.com/mrVanDalo/terranix/blob/master/modules/terraform/backends.nix#blob-path"}],"description":"The path where to store the state\n","loc":["backend","etcd","path"],"readOnly":false,"type":"string"},"backend.etcd.username":{"declarations":[{"channelPath":"terranix/modules/terraform/backends.nix","path":"modules/terraform/backends.nix","url":"https://github.com/mrVanDalo/terranix/blob/master/modules/terraform/backends.nix#blob-path"}],"default":null,"description":"the username\n","loc":["backend","etcd","username"],"readOnly":false,"type":"null or string"},"backend.local":{"declarations":[{"channelPath":"terranix/modules/terraform/backends.nix","path":"modules/terraform/backends.nix","url":"https://github.com/mrVanDalo/terranix/blob/master/modules/terraform/backends.nix#blob-path"}],"default":null,"description":"local backend\nhttps://www.terraform.io/docs/backends/types/local.html\n","loc":["backend","local"],"readOnly":false,"type":"null or submodule"},"backend.local.path":{"declarations":[{"channelPath":"terranix/modules/terraform/backends.nix","path":"modules/terraform/backends.nix","url":"https://github.com/mrVanDalo/terranix/blob/master/modules/terraform/backends.nix#blob-path"}],"description":"path to the state file\n","loc":["backend","local","path"],"readOnly":false,"type":"string"},"backend.s3":{"declarations":[{"channelPath":"terranix/modules/terraform/backends.nix","path":"modules/terraform/backends.nix","url":"https://github.com/mrVanDalo/terranix/blob/master/modules/terraform/backends.nix#blob-path"}],"default":null,"description":"s3 backend\nhttps://www.terraform.io/docs/backends/types/s3.html\n","loc":["backend","s3"],"readOnly":false,"type":"null or submodule"},"backend.s3.bucket":{"declarations":[{"channelPath":"terranix/modules/terraform/backends.nix","path":"modules/terraform/backends.nix","url":"https://github.com/mrVanDalo/terranix/blob/master/modules/terraform/backends.nix#blob-path"}],"description":"bucket name\n","loc":["backend","s3","bucket"],"readOnly":false,"type":"string"},"backend.s3.key":{"declarations":[{"channelPath":"terranix/modules/terraform/backends.nix","path":"modules/terraform/backends.nix","url":"https://github.com/mrVanDalo/terranix/blob/master/modules/terraform/backends.nix#blob-path"}],"description":"path to the state file in the bucket\n","loc":["backend","s3","key"],"readOnly":false,"type":"string"},"backend.s3.region":{"declarations":[{"channelPath":"terranix/modules/terraform/backends.nix","path":"modules/terraform/backends.nix","url":"https://github.com/mrVanDalo/terranix/blob/master/modules/terraform/backends.nix#blob-path"}],"description":"region of the bucket\n","loc":["backend","s3","region"],"readOnly":false,"type":"string"},"cloudflare.enable":{"declarations":[{"channelPath":"terranix/modules/provider/cloudflare.nix","path":"modules/provider/cloudflare.nix","url":"https://github.com/mrVanDalo/terranix/blob/master/modules/provider/cloudflare.nix#blob-path"}],"default":false,"description":"Whether to enable enable cloudflare provider.","example":true,"loc":["cloudflare","enable"],"readOnly":false,"type":"boolean"},"cloudflare.provider":{"declarations":[{"channelPath":"terranix/modules/provider/cloudflare.nix","path":"modules/provider/cloudflare.nix","url":"https://github.com/mrVanDalo/terranix/blob/master/modules/provider/cloudflare.nix#blob-path"}],"default":{"email":"${ var.cloudflare_email }","token":"${ var.cloudflare_token }"},"description":"This option has no description.","loc":["cloudflare","provider"],"readOnly":false,"type":"submodule"},"cloudflare.provider.api_client_logging":{"declarations":[{"channelPath":"terranix/modules/provider/cloudflare.nix","path":"modules/provider/cloudflare.nix","url":"https://github.com/mrVanDalo/terranix/blob/master/modules/provider/cloudflare.nix#blob-path"}],"default":null,"description":"Whether to print logs from the API client (using the default log library logger).\nThis can also be specified with the CLOUDFLARE_API_CLIENT_LOGGING shell environment variable.\n","loc":["cloudflare","provider","api_client_logging"],"readOnly":false,"type":"null or boolean"},"cloudflare.provider.email":{"declarations":[{"channelPath":"terranix/modules/provider/cloudflare.nix","path":"modules/provider/cloudflare.nix","url":"https://github.com/mrVanDalo/terranix/blob/master/modules/provider/cloudflare.nix#blob-path"}],"default":"${ var.cloudflare_email }","description":"The email associated with the account. This can also be specified with the CLOUDFLARE_EMAIL shell environment variable.\n","loc":["cloudflare","provider","email"],"readOnly":false,"type":"string"},"cloudflare.provider.max_backoff":{"declarations":[{"channelPath":"terranix/modules/provider/cloudflare.nix","path":"modules/provider/cloudflare.nix","url":"https://github.com/mrVanDalo/terranix/blob/master/modules/provider/cloudflare.nix#blob-path"}],"default":null,"description":"Maximum backoff period in seconds after failed API calls\nThis can also be specified with the CLOUDFLARE_MAX_BACKOFF shell environment variable.\n","loc":["cloudflare","provider","max_backoff"],"readOnly":false,"type":"null or signed integer"},"cloudflare.provider.min_backoff":{"declarations":[{"channelPath":"terranix/modules/provider/cloudflare.nix","path":"modules/provider/cloudflare.nix","url":"https://github.com/mrVanDalo/terranix/blob/master/modules/provider/cloudflare.nix#blob-path"}],"default":null,"description":"Minimum backoff period in seconds after failed API calls.\nThis can also be specified with the CLOUDFLARE_MIN_BACKOFF shell environment variable.\n","loc":["cloudflare","provider","min_backoff"],"readOnly":false,"type":"null or signed integer"},"cloudflare.provider.org_id":{"declarations":[{"channelPath":"terranix/modules/provider/cloudflare.nix","path":"modules/provider/cloudflare.nix","url":"https://github.com/mrVanDalo/terranix/blob/master/modules/provider/cloudflare.nix#blob-path"}],"default":null,"description":"Configure API client with this organisation ID, so calls use the organization API rather\nthan the (default) user API. This is required for other users in your organization to have\naccess to the resources you manage. This can also be specified with the CLOUDFLARE_ORG_ID\nshell environment variable.\n","loc":["cloudflare","provider","org_id"],"readOnly":false,"type":"null or string"},"cloudflare.provider.retries":{"declarations":[{"channelPath":"terranix/modules/provider/cloudflare.nix","path":"modules/provider/cloudflare.nix","url":"https://github.com/mrVanDalo/terranix/blob/master/modules/provider/cloudflare.nix#blob-path"}],"default":null,"description":"Maximum number of retries to perform when an API request fails.\nThis can also be specified with the CLOUDFLARE_RETRIES shell environment variable.\n","loc":["cloudflare","provider","retries"],"readOnly":false,"type":"null or string"},"cloudflare.provider.rps":{"declarations":[{"channelPath":"terranix/modules/provider/cloudflare.nix","path":"modules/provider/cloudflare.nix","url":"https://github.com/mrVanDalo/terranix/blob/master/modules/provider/cloudflare.nix#blob-path"}],"default":null,"description":"RPS limit to apply when making calls to the API.\nThis can also be specified with the CLOUDFLARE_RPS shell environment variable.\n","loc":["cloudflare","provider","rps"],"readOnly":false,"type":"null or signed integer"},"cloudflare.provider.token":{"declarations":[{"channelPath":"terranix/modules/provider/cloudflare.nix","path":"modules/provider/cloudflare.nix","url":"https://github.com/mrVanDalo/terranix/blob/master/modules/provider/cloudflare.nix#blob-path"}],"default":"${ var.cloudflare_token }","description":"The Cloudflare API token. This can also be specified with the CLOUDFLARE_TOKEN shell environment variable.\n","loc":["cloudflare","provider","token"],"readOnly":false,"type":"string"},"cloudflare.provider.use_org_from_zone":{"declarations":[{"channelPath":"terranix/modules/provider/cloudflare.nix","path":"modules/provider/cloudflare.nix","url":"https://github.com/mrVanDalo/terranix/blob/master/modules/provider/cloudflare.nix#blob-path"}],"default":null,"description":"Takes a zone name value. This is used to lookup the organization ID that owns this zone,\nwhich will be used to configure the API client. If org_id is also specified, this field will\nbe ignored. This can also be specified with the CLOUDFLARE_ORG_ZONE shell environment variable.\n","loc":["cloudflare","provider","use_org_from_zone"],"readOnly":false,"type":"null or string"},"github.enable":{"declarations":[{"channelPath":"terranix/modules/provider/github.nix","path":"modules/provider/github.nix","url":"https://github.com/mrVanDalo/terranix/blob/master/modules/provider/github.nix#blob-path"}],"default":false,"description":"Whether to enable enable github provider.","example":true,"loc":["github","enable"],"readOnly":false,"type":"boolean"},"github.provider":{"declarations":[{"channelPath":"terranix/modules/provider/github.nix","path":"modules/provider/github.nix","url":"https://github.com/mrVanDalo/terranix/blob/master/modules/provider/github.nix#blob-path"}],"default":{"token":"${ var.github_api_token }"},"description":"This option has no description.","loc":["github","provider"],"readOnly":false,"type":"submodule"},"github.provider.token":{"declarations":[{"channelPath":"terranix/modules/provider/github.nix","path":"modules/provider/github.nix","url":"https://github.com/mrVanDalo/terranix/blob/master/modules/provider/github.nix#blob-path"}],"default":"${ var.github_api_token }","description":"login token\n","loc":["github","provider","token"],"readOnly":false,"type":"string"},"hcloud.enable":{"declarations":[{"channelPath":"terranix/modules/provider/hcloud.nix","path":"modules/provider/hcloud.nix","url":"https://github.com/mrVanDalo/terranix/blob/master/modules/provider/hcloud.nix#blob-path"}],"default":false,"description":"Whether to enable enable hcloud provider.","example":true,"loc":["hcloud","enable"],"readOnly":false,"type":"boolean"},"hcloud.provider":{"declarations":[{"channelPath":"terranix/modules/provider/hcloud.nix","path":"modules/provider/hcloud.nix","url":"https://github.com/mrVanDalo/terranix/blob/master/modules/provider/hcloud.nix#blob-path"}],"default":{"token":"${ var.hcloud_api_token }"},"description":"This option has no description.","loc":["hcloud","provider"],"readOnly":false,"type":"submodule"},"hcloud.provider.endpoint":{"declarations":[{"channelPath":"terranix/modules/provider/hcloud.nix","path":"modules/provider/hcloud.nix","url":"https://github.com/mrVanDalo/terranix/blob/master/modules/provider/hcloud.nix#blob-path"}],"default":null,"description":"- (Optional, string) Hetzner Cloud API endpoint, can be used to override the default API Endpoint https://api.hetzner.cloud/v1.\n","loc":["hcloud","provider","endpoint"],"readOnly":false,"type":"null or string"},"hcloud.provider.poll_interval":{"declarations":[{"channelPath":"terranix/modules/provider/hcloud.nix","path":"modules/provider/hcloud.nix","url":"https://github.com/mrVanDalo/terranix/blob/master/modules/provider/hcloud.nix#blob-path"}],"default":null,"description":"- (Optional, string) Configures the interval in which actions are polled by the client. Default 500ms. Increase this interval if you run into rate limiting errors.\n","loc":["hcloud","provider","poll_interval"],"readOnly":false,"type":"null or string"},"hcloud.provider.token":{"declarations":[{"channelPath":"terranix/modules/provider/hcloud.nix","path":"modules/provider/hcloud.nix","url":"https://github.com/mrVanDalo/terranix/blob/master/modules/provider/hcloud.nix#blob-path"}],"default":"${ var.hcloud_api_token }","description":"To get started using the API you first\nneed an API token. Sign in into the Hetzner Cloud Console choose a\nproject, go to Access → Tokens, and create a new token. Make sure\nto copy the token because it won’t be shown to you again.\nA token is bound to a project, to interact with the API of another\nproject you have to create a new token inside the project\n","loc":["hcloud","provider","token"],"readOnly":false,"type":"string"},"provisioner.privateKeyFile":{"declarations":[{"channelPath":"terranix/modules/provisioner.nix","path":"modules/provisioner.nix","url":"https://github.com/mrVanDalo/terranix/blob/master/modules/provisioner.nix#blob-path"}],"description":"private key filename for ssh access for provioning\nsee https://www.terraform.io/docs/provisioners/connection.html\n","loc":["provisioner","privateKeyFile"],"readOnly":false,"type":"string"},"remote_state.etcd":{"declarations":[{"channelPath":"terranix/modules/terraform/backends.nix","path":"modules/terraform/backends.nix","url":"https://github.com/mrVanDalo/terranix/blob/master/modules/terraform/backends.nix#blob-path"}],"default":{},"description":"etcd remote state\nhttps://www.terraform.io/docs/backends/types/etcd.html\n","loc":["remote_state","etcd"],"readOnly":false,"type":"attribute set of submodules"},"remote_state.etcd.<name>.endpoints":{"declarations":[{"channelPath":"terranix/modules/terraform/backends.nix","path":"modules/terraform/backends.nix","url":"https://github.com/mrVanDalo/terranix/blob/master/modules/terraform/backends.nix#blob-path"}],"description":"A space-separated list of the etcd endpoints\n","loc":["remote_state","etcd","<name>","endpoints"],"readOnly":false,"type":"string"},"remote_state.etcd.<name>.password":{"declarations":[{"channelPath":"terranix/modules/terraform/backends.nix","path":"modules/terraform/backends.nix","url":"https://github.com/mrVanDalo/terranix/blob/master/modules/terraform/backends.nix#blob-path"}],"default":null,"description":"the password\n","loc":["remote_state","etcd","<name>","password"],"readOnly":false,"type":"null or string"},"remote_state.etcd.<name>.path":{"declarations":[{"channelPath":"terranix/modules/terraform/backends.nix","path":"modules/terraform/backends.nix","url":"https://github.com/mrVanDalo/terranix/blob/master/modules/terraform/backends.nix#blob-path"}],"description":"The path where to store the state\n","loc":["remote_state","etcd","<name>","path"],"readOnly":false,"type":"string"},"remote_state.etcd.<name>.username":{"declarations":[{"channelPath":"terranix/modules/terraform/backends.nix","path":"modules/terraform/backends.nix","url":"https://github.com/mrVanDalo/terranix/blob/master/modules/terraform/backends.nix#blob-path"}],"default":null,"description":"the username\n","loc":["remote_state","etcd","<name>","username"],"readOnly":false,"type":"null or string"},"remote_state.local":{"declarations":[{"channelPath":"terranix/modules/terraform/backends.nix","path":"modules/terraform/backends.nix","url":"https://github.com/mrVanDalo/terranix/blob/master/modules/terraform/backends.nix#blob-path"}],"default":{},"description":"local remote state\nhttps://www.terraform.io/docs/backends/types/local.html\n","loc":["remote_state","local"],"readOnly":false,"type":"attribute set of submodules"},"remote_state.local.<name>.path":{"declarations":[{"channelPath":"terranix/modules/terraform/backends.nix","path":"modules/terraform/backends.nix","url":"https://github.com/mrVanDalo/terranix/blob/master/modules/terraform/backends.nix#blob-path"}],"description":"path to the state file\n","loc":["remote_state","local","<name>","path"],"readOnly":false,"type":"string"},"remote_state.s3":{"declarations":[{"channelPath":"terranix/modules/terraform/backends.nix","path":"modules/terraform/backends.nix","url":"https://github.com/mrVanDalo/terranix/blob/master/modules/terraform/backends.nix#blob-path"}],"default":{},"description":"s3 remote state\nhttps://www.terraform.io/docs/backends/types/s3.html\n","loc":["remote_state","s3"],"readOnly":false,"type":"attribute set of submodules"},"remote_state.s3.<name>.bucket":{"declarations":[{"channelPath":"terranix/modules/terraform/backends.nix","path":"modules/terraform/backends.nix","url":"https://github.com/mrVanDalo/terranix/blob/master/modules/terraform/backends.nix#blob-path"}],"description":"bucket name\n","loc":["remote_state","s3","<name>","bucket"],"readOnly":false,"type":"string"},"remote_state.s3.<name>.key":{"declarations":[{"channelPath":"terranix/modules/terraform/backends.nix","path":"modules/terraform/backends.nix","url":"https://github.com/mrVanDalo/terranix/blob/master/modules/terraform/backends.nix#blob-path"}],"description":"path to the state file in the bucket\n","loc":["remote_state","s3","<name>","key"],"readOnly":false,"type":"string"},"remote_state.s3.<name>.region":{"declarations":[{"channelPath":"terranix/modules/terraform/backends.nix","path":"modules/terraform/backends.nix","url":"https://github.com/mrVanDalo/terranix/blob/master/modules/terraform/backends.nix#blob-path"}],"description":"region of the bucket\n","loc":["remote_state","s3","<name>","region"],"readOnly":false,"type":"string"},"users":{"declarations":[{"channelPath":"terranix/modules/users.nix","path":"modules/users.nix","url":"https://github.com/mrVanDalo/terranix/blob/master/modules/users.nix#blob-path"}],"default":{},"description":"user managment for servers. usually admins.\nA gloabal container of users which servers should\npull from and allow access to them.\n","example":{"admins":{"lassuls":{"publicKey":"ssh-rsa ABKAB3NzaC1yc2EAAAA.."},"mrVanDalo":{"publicKey":"ssh-rsa AAAAB3NzaC1yc2EAAAA.."}}},"loc":["users"],"readOnly":false,"type":"attribute set of attribute set of submoduless"},"users.<name>.<name>.publicKey":{"declarations":[{"channelPath":"terranix/modules/users.nix","path":"modules/users.nix","url":"https://github.com/mrVanDalo/terranix/blob/master/modules/users.nix#blob-path"}],"default":null,"description":"public ssh key of user.\n","loc":["users","<name>","<name>","publicKey"],"readOnly":false,"type":"null or string"}}